/* THIS FILE WAS AUTO GENERATED BY codegen-maven-plugin, DO NOT EDIT IT */
package org.unidal.workspace.program.entity;

import java.util.ArrayList;
import java.util.List;

import org.unidal.workspace.program.BaseEntity;
import org.unidal.workspace.program.IVisitor;

public class Program extends BaseEntity<Program> {
   private List<Block> m_blocks = new ArrayList<Block>();

   public Program() {
   }

   @Override
   public void accept(IVisitor visitor) {
      visitor.visitProgram(this);
   }

   public Program addBlock(Block block) {
      m_blocks.add(block);
      return this;
   }

   @Override
   public boolean equals(Object obj) {
      if (obj instanceof Program) {
         Program _o = (Program) obj;

         if (!equals(getBlocks(), _o.getBlocks())) {
            return false;
         }


         return true;
      }

      return false;
   }

   public Block findBlock(String name) {
      for (Block block : m_blocks) {
         if (!equals(block.getName(), name)) {
            continue;
         }

         return block;
      }

      return null;
   }

   public Block findOrCreateBlock(String name) {
      synchronized (m_blocks) {
         for (Block block : m_blocks) {
            if (!equals(block.getName(), name)) {
               continue;
            }

            return block;
         }

         Block block = new Block(name);

         m_blocks.add(block);
         return block;
      }
   }

   public List<Block> getBlocks() {
      return m_blocks;
   }

   @Override
   public int hashCode() {
      int hash = 0;

      for (Block e : m_blocks) {
         hash = hash * 31 + (e == null ? 0 :e.hashCode());
      }


      return hash;
   }

   @Override
   public void mergeAttributes(Program other) {
   }

   public Block removeBlock(String name) {
      int len = m_blocks.size();

      for (int i = 0; i < len; i++) {
         Block block = m_blocks.get(i);

         if (!equals(block.getName(), name)) {
            continue;
         }

         return m_blocks.remove(i);
      }

      return null;
   }

	public Block findBlockById(String id) {
		for (Block block : m_blocks) {
         if (!equals(block.getId(), id)) {
            continue;
         }

         return block;
      }

      return null;
	}

}
